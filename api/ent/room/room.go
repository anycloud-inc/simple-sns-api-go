// Code generated by ent, DO NOT EDIT.

package room

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the room type in the database.
	Label = "room"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserIds holds the string denoting the userids field in the database.
	FieldUserIds = "user_ids"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeRoomUsers holds the string denoting the roomusers edge name in mutations.
	EdgeRoomUsers = "roomUsers"
	// EdgeMessages holds the string denoting the messages edge name in mutations.
	EdgeMessages = "messages"
	// Table holds the table name of the room in the database.
	Table = "rooms"
	// RoomUsersTable is the table that holds the roomUsers relation/edge.
	RoomUsersTable = "room_users"
	// RoomUsersInverseTable is the table name for the RoomUser entity.
	// It exists in this package in order to avoid circular dependency with the "roomuser" package.
	RoomUsersInverseTable = "room_users"
	// RoomUsersColumn is the table column denoting the roomUsers relation/edge.
	RoomUsersColumn = "room_id"
	// MessagesTable is the table that holds the messages relation/edge.
	MessagesTable = "messages"
	// MessagesInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MessagesInverseTable = "messages"
	// MessagesColumn is the table column denoting the messages relation/edge.
	MessagesColumn = "room_id"
)

// Columns holds all SQL columns for room fields.
var Columns = []string{
	FieldID,
	FieldUserIds,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UserIdsValidator is a validator for the "userIds" field. It is called by the builders before save.
	UserIdsValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
